exit
params
klass
exit
vote.valid?
exit
vote
vote.valid?
exit
klass.to_s
klass.find(28)
klass
exit
params
vote.voteable_type
exit
y
y.find(28)
y
eval(y)
y.constantize
y =Object.const_get x
y.find(28)
y.find(1)
y =Object.const_get x
Object.const_get x
x = params[:controller].classify
x.find(1)
x = params[:controller].classify.constantize.new
x.find("28")
x.find(28)
x = params[:controller].classify.constantize
Suggestion.find("28")
Suggestion.find(28)
params[:suggestion_id]
params[:controller].classify.constantize.find(params[:suggestion_id])
params[:controller].classify.constantize.find(1)
params[:controller].classify.constantize
params[:controller].classify
vote.classify.constantize
exit
vote.valid?
vote.user_id = vote.user_id || 1
vote.voteable_id = params[:suggestion_id]
vote.suggestion_id
vote.suggestion_id = params[:suggestion_id].classify
vote
exit
a.classify
a = params["controller"]
Vote.new
params["controller"].singularize
params["controller"]
params["controller
params.controller
params.controller.singularize
params
vote_params
exit
params
@comment.valid?
@comment.user_id = 1
@comment.valid?
@comment.suggestion_id = 1
@comment.valid?
@comment = Comment.new(comment_params)
@comment
params
exit
param
comment_params
exit
x.valid?
x
x.suggestion_id = params[:suggestion_id]
x
x.suggestion = params[:suggestion_id]
x
x = Vote.new(vote_params)
x
x = Vote.new
v = Vote.new(vote_params)
Vote.new
v = Vote.new
params
exit
params[:suggestion_id]
vote_params
params
exit
suggestion
respond_with
respond_with suggestion
suggestion.valid?
suggestion
exit
suggestion_params
suggestion
exit
suggestion
exit
suggestion_params
suggestion
exit
suggestion.update_attributes(suggestion_params)
suggestion_params
Suggestion.find(params[:id])
params[:id]
exit
suggestion.valid?
suggestion.author = User.all.first
User.all
suggestion.author = 1
suggestion.author = 'TEST'
suggestion.valid?
suggestion_params
